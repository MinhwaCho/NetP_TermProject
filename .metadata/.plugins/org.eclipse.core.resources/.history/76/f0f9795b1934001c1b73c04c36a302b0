
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JLabel;
import javax.swing.JPanel;

public class MapPanel extends JPanel{
	
	private final int MAXMAP = 2;	// map의 총 개수
	private final int ROWS = 20;	// map의 가로길이
	private final int COLS = 20;	// map의 세로길이
	private final int UNIT = 20;	// map의 한 칸의 길이 (pixel)
	
	private int[][] map;			// main map
	
	private String player = "@";
	private int playerX = UNIT;
	private int playerY = 0;

	// num에 따라 그에 맞는 미로 Map을 만드는 생성자
	public MapPanel(int num){
		initMap(num);
		addKeyListener(new PlayerKeyboardListener());
		
	}
	
	private void initMap(int num) {
		int [][] map1 = 
			 {
				{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,0,1,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1},
				{1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1},
				{1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1},
				{1,0,1,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1},
				{1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1},
				{1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1},
				{1,0,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1},
				{1,0,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,1},
				{1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1},
				{1,1,0,0,1,1,1,0,1,1,0,0,1,0,0,0,0,1,0,1},
				{1,1,1,0,0,0,1,0,0,0,0,1,1,1,0,1,0,1,0,5},
				{1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1},
				{1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1},
				{1,0,1,1,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1},
				{1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1},
				{1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1},
				{1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1},
				{1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
			};
		
		int [][] map2 = 
			{
				{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1},
				{1,0,1,1,1,1,1,0,1,1,1,0,1,0,0,0,0,1,0,1},
				{1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,1},
				{1,0,1,1,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1},
				{1,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1,1,1},
				{1,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1},
				{1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,0,0,0,0,1},
				{1,0,1,0,0,1,0,1,0,1,0,0,0,0,1,1,0,1,1,1},
				{1,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,0,0,1,1},
				{1,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,1},
				{1,0,1,0,0,1,0,1,0,1,1,1,1,1,0,1,1,1,0,5},
				{1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1},
				{1,0,1,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1},
				{1,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,1,1},
				{1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1},
				{1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1},
				{1,0,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1},
				{1,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
			};
		
		if (num % 2 == 1)	map = map1;
		else				map = map2;
	}
	
	// Getter
	public int getRow() {
		return ROWS;
	}
	public int getCol() {
		return COLS;
	}
	public int getUnit() {
		return UNIT;
	}

	public int getXY(int row, int col) {
		return map[col][row];
	}
	
	// map 그리기
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		for(int i = 0; i < COLS; i++) {
			for (int j = 0; j < ROWS; j++) {
				if (getXY(i, j) == 1)	g.setColor(Color.DARK_GRAY);
				else 					g.setColor(Color.LIGHT_GRAY);
				g.fillRect(i*UNIT, j*UNIT, UNIT, UNIT);
			}
		}
	}
	
	class PlayerKeyboardListener extends KeyAdapter{
		
		public void keyPressed(KeyEvent e) {
			int keyCode = e.getKeyCode();
			
			System.out.println(x + ", " + y + ", " + keyCode);
			
			switch(keyCode) {
			case KeyEvent.VK_UP:
				if(getXY(playerX/UNIT, playerY/UNIT) != 1 && playerY > 0)
					player.setLocation(playerX, playerY - UNIT);
				break;
			case KeyEvent.VK_DOWN:
				if(getXY(x/UNIT, y/UNIT) != 1 && playerY < 400)
					player.setLocation(playerX, playerY + UNIT);
				break;
			case KeyEvent.VK_LEFT:
				if(getXY(x/UNIT, y/UNIT) != 1 && playerX > 0)
					player.setLocation(playerX - UNIT, playerY);
				break;
			case KeyEvent.VK_RIGHT:
				if(getXY(x/UNIT, y/UNIT) != 1 && playerX < 400)
					player.setLocation(playerX + UNIT, playerY);
				break;
			}
			
			repaint();
		}
	}
}